version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.3
  jira: circleci/jira@1.3.1

executors:
  content-server-executor:
    resource_class: large
    docker:
      - image: cimg/node:16.13-browsers
      - image: redis
      - image: memcached
      - image: pafortin/goaws
      - image: cimg/mysql:5.7
      - image: jdlk7/firestore-emulator
        environment:
          NODE_ENV: dev
          FXA_EMAIL_ENV: dev
          FXA_EMAIL_LOG_LEVEL: debug
          RUST_BACKTRACE: 1
          AUTH_FIRESTORE_EMULATOR_HOST: localhost:9090
    environment:
      FXA_MX_RECORD_EXCLUSIONS: restmail.dev.lcip.org

commands:
  base-install:
    steps:
      - checkout
      - restore_cache:
          keys:
            # prefer the exact hash
            - fxa-yarn-cache-4-{{ checksum "yarn.lock" }}
            # any cache to start with is better than nothing
            - fxa-yarn-cache-4-
      - run: ./.circleci/base-install.sh
      - save_cache:
          key: fxa-yarn-cache-4-{{ checksum "yarn.lock" }}
          paths:
            - .yarn/cache
            - .yarn/build-state.yml
            - .yarn/install-state.gz
  test-content-server-part:
    parameters:
      index:
        type: integer
        default: 0
      total:
        type: integer
        default: 6
    steps:
      - browser-tools/install-firefox:
          version: 78.9.0esr
      - browser-tools/install-geckodriver:
          version: v0.29.1
      - base-install
      - run:
          name: Running test section << parameters.index >> of << parameters.total >>
          environment:
            CIRCLE_NODE_INDEX: << parameters.index >>
            CIRCLE_NODE_TOTAL: << parameters.total >>
          command: ./.circleci/test-package.sh fxa-content-server
      - store_artifacts:
          path: ~/.pm2/logs
          destination: logs
      - store_artifacts:
          path: ~/screenshots
          destination: screenshots
      - store_test_results:
          path: artifacts/tests

  test-settings-server:
    steps:
      - browser-tools/install-firefox:
          version: 78.9.0esr
      - browser-tools/install-geckodriver:
          version: v0.29.1
      - base-install
      - run:
          name: Running test...
          command: ./.circleci/test-package.sh fxa-settings
      - store_artifacts:
          path: ~/.pm2/logs
          destination: logs
      - store_artifacts:
          path: ~/screenshots
          destination: screenshots
      - store_test_results:
          path: artifacts/tests

jobs:
  test-package:
    resource_class: medium+
    docker:
      - image: cimg/node:16.13
      - image: redis
      - image: memcached
      - image: pafortin/goaws
      - image: cimg/mysql:5.7
      - image: jdlk7/firestore-emulator
        environment:
          NODE_ENV: dev
          AUTH_FIRESTORE_EMULATOR_HOST: localhost:9090

    parameters:
      package:
        type: string
    steps:
      - base-install
      - run:
          name: Testing << parameters.package >>
          command: ./.circleci/test-package.sh << parameters.package >>
      - store_test_results:
          path: artifacts/tests
      - run:
          name: Reporting code coverage...
          command: bash <(curl -s https://codecov.io/bash) -F << parameters.package >> -X gcov

  test-many:
    resource_class: medium+
    docker:
      - image: cimg/node:16.13
      - image: cimg/mysql:5.7
      - image: jdlk7/firestore-emulator
      - image: memcached
      - image: redis
    steps:
      - base-install
      - run:
          name: Testing...
          command: |
            PACKAGES=(\
            'fxa-shared' \
            'fxa-react' \
            'fxa-graphql-api' \
            'fxa-payments-server' \
            'fxa-admin-server' \
            'fxa-admin-panel' \
            'fxa-support-panel' \
            'fxa-event-broker' \
            'fxa-profile-server' \
            '123done' \
            'browserid-verifier' \
            'fortress' \
            'fxa-auth-client' \
            'fxa-geodb' \
            'fxa-customs-server' \
            )
            for p in "${PACKAGES[@]}"; do
              ./.circleci/test-package.sh $p
            done
      - run:
          name: Reporting code coverage...
          command: bash <(curl -s https://codecov.io/bash) -F many -X gcov
      - jira/notify

  test-settings-server:
    executor: content-server-executor
    steps:
      - test-settings-server

  test-content-server-0:
    executor: content-server-executor
    steps:
      - test-content-server-part:
          index: 0

  test-content-server-1:
    executor: content-server-executor
    steps:
      - test-content-server-part:
          index: 1

  test-content-server-2:
    executor: content-server-executor
    steps:
      - test-content-server-part:
          index: 2

  test-content-server-3:
    executor: content-server-executor
    steps:
      - test-content-server-part:
          index: 3

  test-content-server-4:
    executor: content-server-executor
    steps:
      - test-content-server-part:
          index: 4

  test-content-server-5:
    executor: content-server-executor
    steps:
      - test-content-server-part:
          index: 5

  deploy-packages:
    resource_class: small
    docker:
      - image: cimg/node:16.13
    environment:
      DOCKER_BUILDKIT: 1
    steps:
      - base-install
      - setup_remote_docker:
          version: 18.09.3
      - run:
          name: Build docker images
          command: ./.circleci/build-all.sh
          no_output_timeout: 1h
      - run:
          name: Push to docker hub
          command: ./.circleci/deploy-all.sh
      - store_artifacts:
          path: artifacts

  # This job is manually triggered for now. see .circleci/README.md
  test-content-server-remote:
    resource_class: large
    docker:
      # using the old image until we know why the orb is broken with manual jobs
      - image: mozilla/fxa-circleci
    steps:
      - base-install
      - run:
          name: Running test section against a remote target
          command: ./packages/fxa-content-server/scripts/test-ci-remote.sh
      - store_artifacts:
          path: ~/screenshots
          destination: screenshots
      - store_test_results:
          path: artifacts/tests

  # This job is manually triggered for now. see .circleci/README.md
  production-smoke-tests:
    resource_class: medium+
    docker:
      - image: mcr.microsoft.com/playwright:v1.18.0-focal
    steps:
      - base-install
      - run:
          name: Running smoke tests
          command: yarn workspace functional-tests test-production
      - store_artifacts:
          path: artifacts
      - store_test_results:
          path: artifacts/tests

  playwright-functional-tests:
    resource_class: large
    docker:
      - image: mcr.microsoft.com/playwright:v1.18.0-focal
      - image: redis
      - image: memcached
      - image: cimg/mysql:5.7
      - image: jdlk7/firestore-emulator
    environment:
      NODE_ENV: dev
    steps:
      # needed by check-mysql.sh
      - run: apt-get update && apt-get install -y netcat
      - base-install
      - run:
          name: Running playwright tests
          command: ./packages/functional-tests/scripts/test-ci.sh
      - store_artifacts:
          path: ~/.pm2/logs
          destination: logs
      - store_artifacts:
          path: artifacts
      - store_test_results:
          path: artifacts/tests

  build-and-deploy-storybooks:
    resource_class: medium
    docker:
      - image: cimg/node:16.13
    steps:
      - base-install
      - run:
          name: Build and deploy Storybooks
          command: npx github:mozilla-fxa/storybook-gcp-publisher

workflows:
  test_pull_request:
    jobs:
      - test-many:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-settings-server:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-package:
          name: test-auth-server
          package: fxa-auth-server
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-content-server-0:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-content-server-1:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-content-server-2:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-content-server-3:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-content-server-4:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - test-content-server-5:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - playwright-functional-tests:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
      - build-and-deploy-storybooks:
          filters:
            branches:
              ignore: main
            tags:
              ignore: /.*/
  deploy_branch:
    jobs:
      - deploy-packages:
          filters:
            branches:
              only:
                - main
                - /^feature.*/
                - /^dockerpush.*/
            tags:
              ignore: /.*/
      - build-and-deploy-storybooks:
          filters:
            branches:
              only: main
            tags:
              ignore: /.*/
  test_and_deploy_tag:
    jobs:
      - test-many:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - test-package:
          name: test-auth-server
          package: fxa-auth-server
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - test-content-server-0:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - test-content-server-1:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - test-content-server-2:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - test-content-server-3:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - test-content-server-4:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - test-content-server-5:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - deploy-packages:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
          requires:
            - test-many
            - test-auth-server
            - test-content-server-0
            - test-content-server-1
            - test-content-server-2
            - test-content-server-3
            - test-content-server-4
            - test-content-server-5
